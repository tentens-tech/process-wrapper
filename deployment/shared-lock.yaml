apiVersion: v1
kind: Service
metadata:
  labels:
    app: shared-lock-api
  name: shared-lock-api
spec:
  clusterIP: None
  clusterIPs:
    - None
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 8191
      protocol: TCP
      targetPort: 8191
  selector:
    app: shared-lock-api
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shared-lock-api
    app.kubernetes.io/instance: shared-lock-api
    app.kubernetes.io/name: shared-lock-api
  name: shared-lock-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: shared-lock-api
      app.kubernetes.io/name: shared-lock-api
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: shared-lock-api
        app.kubernetes.io/instance: shared-lock-api
        app.kubernetes.io/name: shared-lock-api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dedicated
                operator: In
                values:
                - coredns
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - shared-lock-api
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        - effect: NoExecute
          key: dedicated
          operator: Equal
          value: coredns
      containers:
      - name: shared-lock-api
        image: <image-repo>/process-wrapper:0.9.10
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/process-wrapper
        args:
        - -shared-lock
        - -shared-lock-etcd-tls=true
        env:
          - name: "SHARED_LEASE_ETCD_ENDPOINTS"
            value: "https://etcd.default.svc.cluster.local:2379"
        ports:
        - containerPort: 8191
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8191
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8191
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /cert/tls/
          name: etcd-main-tls
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-main-tls
        secret:
          defaultMode: 420
          secretName: etcd-main-tls
